services:
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - mode: host
        protocol: tcp
        published: 8080
        target: 8080
      - mode: host
        protocol: tcp
        published: 80
        target: 80
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - public
  db:
    image: mysql:9.2.0
    env_file:
      - ./db.env
    ports:
      - 3306:3306
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../data/mysql:/var/lib/mysql
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 5s
      timeout: 5s
      retries: 20

  cache:
    image: redis:7.4.2
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - ../data/redis:/var/run
    ports:
      - 6379:6379
    networks:
      - cache-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      start_period: 5s
      timeout: 5s
      retries: 20

  ellaapi:
    image: ghcr.io/application-ellas/ella-api:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ellaapi.loadbalancer.server.port=8080"
      - "traefik.http.routers.ellaapi.rule=Host(`localhost`)"
      - "traefik.http.routers.ellaapi.entrypoints=web"
    env_file:
      - ./api.env
    deploy:
      update_config:
        order: start-first
      mode: replicated
      replicas: 2
    volumes:
      - .:/app
    networks:
      - public
      - db-network
      - cache-network
    depends_on:
      - db
      - cache

networks:
  cache-network:
    driver: overlay
  db-network:
    driver: overlay
  public:
    driver: overlay

services:
  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ../data/prometheus:/prometheus:rw
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/metrics"]
      start_period: 5s
      timeout: 5s
      retries: 20

  grafana: 
    image: grafana/grafana:11.0.0
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
    networks:
      - monitoring-network
    depends_on:
      - prometheus

  db:
    image: mysql:9.2.0
    environment:
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=boilerplate-db
    ports:
      - 3306:3306
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - ../data/mysql:/var/lib/mysql
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      start_period: 5s
      timeout: 5s
      retries: 20

  cache:
    image: redis:7.4.2
    command: redis-server --requirepass "development" --port 6379 --loglevel warning --save 60 1 --maxclients 1000 --maxmemory 1gb
    ports:
      - 6379:6379
    volumes:
      - ../data/redis:/var/run
    networks:
      - cache-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      start_period: 5s
      timeout: 5s
      retries: 20

  api:
    build:
      context: ./
      dockerfile: Dockerfile
    deploy:
      update_config:
        order: start-first
    ports:
      - 8080:8080
    networks:
      - db-network
      - cache-network
      - monitoring-network
    depends_on:
      - db
      - cache

networks:
  cache-network:
  db-network:
  monitoring-network:
